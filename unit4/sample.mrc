01608cam a22003737a 45000010009000000050017000090080041000269060045000679250044001129550140001560100017002960150019003130160018003320200025003500200022003750350024003970400059004210420014004800500022004940820015005161000024005312450108005552460027006632600087006903000035007774900026008125040062008385200113009005050094010136500049011076500034011568300027011909360017012171676948020110909134418.0110509s2010    ncua     b    001 0 eng    a7bcbcccopycatd2encipf20gy-gencatlg0 aacquireb2 shelf copiesxpolicy default  bfc03 2011-05-09 z-processor (overtime)ath57 2011-05-10  to USPL/STMixh58 2011-09-09 ; to Dewey 2011-09-09txh58 2011-09-09 c. 2 added  a  2011420545  aGBB0589082bnb7 a0155463262Uk  a9781934356593 (pbk.)  a193435659X (pbk.)  a(OCoLC)ocn620364575  aUKMcUKMdBTCTAdYDXCPdIAWdICNdSINLBdORXdCO3dDLC  alccopycat00aQA76.7b.T38 201004a005.132221 aTate, Bruce,d1965-10aSeven languages in seven weeks :ba pragmatic guide to learning programming languages /cBruce A. Tate.3 a7 languages in 7 weeks  aRaleigh, N.C. :bPragmatic Bookshelf ;aFarnham :bO'Reilly [distributor],cc2010.  axvii, 317 p. :bill. ;c23 cm.1 aPragmatic programmers  aIncludes bibliographical references (p. [311]) and index.  aPresents an introduction to the Ruby, Io, Prolog, Scala, Erlang, Clojure, and Haskell programming languages.0 aIntroduction -- Ruby -- Io -- Prolog -- Scala -- Erlang -- Clojure -- Haskell -- Wrap-up. 0aProgramming languages (Electronic computers) 7aProgramming languages.2sears 0aPragmatic programmers.  aPR 69853559901697cam a22003617i 45000010009000000050017000090080041000269060045000679250042001129550066001540100017002200200015002370200018002520350024002700400075002940420014003690500023003830820017004061000025004232450047004482640066004952640011005613000045005723360026006173370028006433380027006715000020006985050393007186500040011116500046011516500072011976500066012692058445020180726182641.0180714t20182018nyua          001 0 eng d  a7bcbcccopycatd2encipf20gy-gencatlg0 aacquireb1 shelf copyxpolicy default  bxn11 2018-07-14 z-processor to USASHirk06 2018-07-26 to BCCD  a  2018285466  a1617293768  a9781617293764  a(OCoLC)ocn954427441  aYDXCPbengcYDXCPerdadOCLCQdBTCTAdBDXdUUMdOCLCOdYDXdOCLCFdDLC  alccopycat00aQA76.62b.K87 201804a005.1/142231 aKurt, Will,eauthor.10aGet programming with Haskell /cWill Kurt. 1aShelter Island, New York :bManning Publications Co.,c[2018] 4cÂ©2018  axiv, 599 pages :billustrations ;c24 cm  atextbtxt2rdacontent  aunmediatedbn2rdamedia  avolumebnc2rdacarrier  aIncludes index.0 aPreface -- Acknowledgments -- About this book -- About the author -- Lesson 1. Getting started with Haskell -- Unit 1. Foundations of functional programming -- Unit 2. Introducing types -- Unit 3. Programming in types -- Unit 4. IO in Haskell -- Unit 5. Working with type in a context -- Unit 6. Organizing code and building projects -- Unit 7. Practical Haskell -- Afterword -- Appendix. 0aHaskell (Computer program language) 0aFunctional programming (Computer science) 7aFunctional programming (Computer science)2fast0(OCoLC)fst00936086 7aHaskell (Computer program language)2fast0(OCoLC)fst0095183002337cam a2200313 i 45000010009000000050017000090080041000269060045000679250102001129550225002140100017004390200031004560400028004870420008005150500026005230820017005491000036005662450071006022500020006732640081006933000028007743360026008023370028008283380027008565201005008835000028018885040067019166500040019831923741420200323105436.0160819s2016    nyua     b    001 0 eng    a7bcbccorignewd1eecipf20gy-gencatlg0 aacquireb1 shelf copyxpolicy defaulteclaim1  2017-02-28eclaim2  2017-06-29eto CAD  2018-01-24  brk11 2016-08-19irk11 2016-08-19 ONIX to Deweywxm09 2016-08-19axn11 2019-08-05 1 copy rec'd., to CIP ver.arl00 2019-08-07 to SMAarl46 2019-08-07ark20 2019-08-23 book received in ARTfrk24 2020-03-23 Telework to BCCD  a  2016030027  a9781316626221q(paperback)  aDLCbengcDLCerdadDLC  apcc00aQA76.73.H37bH88 201800a005.1/142231 aHutton, Graham,d1968-eauthor.10aProgramming in Haskell /cGraham Hutton, University of Nottingham.  aSecond edition. 1aNew York ;aCambridge, United Kingdom :bCambridge University Press,c[2016]  axxi, 304 pages ;c24 cm  atextbtxt2rdacontent  aunmediatedbn2rdamedia  avolumebnc2rdacarrier  a"Haskell is a purely functional language that allows programmers to rapidly develop clear, concise, and correct software. The language has grown in popularity in recent years, both in teaching and in industry. This book is based on the author's experience of teaching Haskell for more than twenty years. All concepts are explained from first principles and no programming experience is required, making this book accessible to a broad spectrum of readers. While Part I focuses on basic concepts, Part II introduces the reader to more advanced topics. This new edition has been extensively updated and expanded to include recent and more advanced features of Haskell, new examples and exercises, selected solutions, and freely downloadable lecture slides and example code. The presentation is clean and simple, while also being fully compliant with the latest version of the language, including recent changes concerning applicative, monadic, foldable, and traversable types"--cProvided by publisher.  a"First published 2007."  aIncludes bibliographical references (pages 298-299) and index. 0aHaskell (Computer program language)01245cam a2200361 i 45000010009000000050017000090080041000269060045000679250042001129550057001540100017002110150019002280160018002470200025002650200022002900350024003120400079003360420014004150500026004290820015004551000049004702450068005192500019005872640032006063000045006383360021006833370025007043380023007295000020007526500044007726500027008166500040008431821757920140709164632.0140709s2013    cc a          001 0 eng d  a7bcbcccopycatd2encipf20gy-gencatlg0 aacquireb1 shelf copyxpolicy default  brk01 2014-07-09 z-processorirk01 2014-07-09 to BCCD  a  2014397989  aGBB3576232bnb7 a0164440152Uk  a9781449335946 (pbk.)  a1449335942 (pbk.)  a(OCoLC)ocn851826580  aUKMGBbengerdacUKMGBdOCLCOdBTCTAdYDXCPdSINLBdEYMdCHVBKdNLGGCdDLC  alccopycat00aQA76.73.H37bM37 201304a004.352231 aMarlow, Simonc(Software engineer),eauthor.10aParallel and concurrent programming in Haskell /cSimon Marlow.  aFirst edition. 1aBeijing :bO'Reilly,c2013.  axiv, 304 pages :billustrations ;c24 cm  atext2rdacontent  aunmediated2rdamedia  avolume2rdacarrier  aIncludes index. 0aParallel programming (Computer science) 0aComputer multitasking. 0aHaskell (Computer program language)01890cam a22003737a 45000010009000000050017000090080041000269060045000679250042001129250044001549550129001980100017003270150019003440160018003630200025003810200022004060200025004280200022004530350024004750400040004990420014005390500022005530820016005751000025005912450094006162600064007103000033007745050476008075040064012836500061013476500046014086500040014547000022014941679690920190426104221.0110525s2010    enka     b    001 0 eng    a7bcbcccopycatd2encipf20gy-gencatlg0 aacquireb1 shelf copyxpolicy default1 aacquireb2 shelf copiesxpolicy default  bxh16 2011-05-25 z-processorath57 2011-06-01  to USPL/STMixh58 2011-09-15 ; to Dewey 2011-09-15txh58 2011-09-15 c. 2 added  a  2011288335  aGBB0672972bnb7 a0155663812Uk  a9780521760300 (hbk.)  a0521760305 (hbk.)  a9780521757607 (pbk.)  a0521757606 (pbk.)  a(OCoLC)ocn636911230  aUKMcUKMdYDXCPdSTFdCDXdLGGdDLC  alccopycat00aQA76.7b.E43 201004a005.1312221 aEijck, J. vanq(Jan)10aComputational semantics with functional programming /cJan van Eijck and Christina Unger.  aCambridge ;aNew York :bCambridge University Press,c2010.  axv, 405 p. :bill. ;c25 cm.0 aFormal study of natural language -- Lambda calculus, types, and functional programming -- Functional programming with Haskell -- Formal syntax for fragments -- Formal semantics for fragments -- Model checking with predicate logic -- The composition of meaning in natural language -- Extension and intension -- Parsing -- Handling relations and scoping -- Continuation passing style semantics -- Discourse representation and context -- Communication as informative action.  aIncludes bibliographical references (p. 389-395) and index. 0aProgramming languages (Electronic computers)xSemantics. 0aFunctional programming (Computer science) 0aHaskell (Computer program language)1 aUnger, Christina.01427cam a22003497a 45000010009000000050017000090080041000269060045000679250044001129550096001560100017002520150019002690160018002880200025003060200022003310200025003530200022003780350023004000400039004230420014004620500023004760820016004991000020005152450045005352600068005803000034006485040066006826500040007488560106007888560091008948560092009851485283620070905111057.0070516s2007    enka     b    001 0 eng    a7bcbcccopycatd2encipf20gy-gencatlg0 aacquireb2 shelf copiesxpolicy default  apv12 2007-05-16 z-processor to ASCDijx14 2007-06-18 to jx01ejx14 2007-07-10 to  2c.  BCCD  a  2007274987  aGBA6786452bnb7 a0135526122Uk  a9780521871723 (hbk.)  a0521871727 (hbk.)  a9780521692694 (pbk.)  a0521692695 (pbk.)  a(OCoLC)ocm71347608  aUKMcUKMdBAKERdBWKUKdYDXCPdDLC  alccopycat00aQA76.62b.H88 200704a005.1332221 aHutton, Graham.10aProgramming in Haskell /cGraham Hutton.  aCambridge, UK ;aNew York :bCambridge University Press,c2007.  axii, 171 p. :bill. ;c26 cm.  aIncludes bibliographical references (p. [167]-168) and index. 0aHaskell (Computer program language)423Contributor biographical informationuhttp://www.loc.gov/catdir/enhancements/fy0729/2007274987-b.html423Publisher descriptionuhttp://www.loc.gov/catdir/enhancements/fy0729/2007274987-d.html413Table of contents onlyuhttp://www.loc.gov/catdir/enhancements/fy0729/2007274987-t.html01350cam a2200313 a 4500001000800000005001700008008004100025035002100066906004500087955013000132010001700262020001500279020002200294040001800316050002300334082001600357100004400373245009000417260007300507300003400580440004300614504006400657650004600721650004000767856008600807856007400893922000700967991006200974440781720020826201506.0921006s1992    enka     b    001 0 eng    9(DLC)   92224723  a7bcbccorignewd3encipf19gy-gencatlg  aub08 10-06-92 to Cat.; jf00 10/13/92; jf03 10-15-92; jf11 to SHED 05-14-93; jf11 to sl 06-10-93; jf13 06-22-93; aa07 06-29-93  a   92224723   a0521258308  a0521277248 (pbk.)  aDLCcDLCdDLC00aQA76.62b.D38 199200a005.1/12201 aDavie, A. J. T.q(Antony J. T.),d1939-13aAn introduction to functional programming systems using Haskell /cAntony J.T. Davie.  aCambridge ;aNew York, NY, USA :bCambridge University Press,c1992.  axiv, 290 p. :bill. ;c24 cm. 0aCambridge computer science texts ;v27  aIncludes bibliographical references (p. 213-225) and index. 0aFunctional programming (Computer science) 0aHaskell (Computer program language)423Publisher descriptionuhttp://www.loc.gov/catdir/description/cam025/92224723.html413Table of contentsuhttp://www.loc.gov/catdir/toc/cam027/92224723.html  acf  bc-GenCollhQA76.62i.D38 1992p00011214071tCopy 1wBOOKS02217cam a22003735a 45000010009000000050017000090080041000269060045000679250042001129550041001540100017001950200018002120200015002300350024002450400057002690420014003260820016003401000033003562450077003892640060004662640011005263000048005373360026005853370028006113380027006395000020006665050156006865200732008426500040015746500046016146500072016606500066017327000045017982223212120210914095604.0210914t20212021nyua          001 0 eng d  a0bibcccopycatd2encipf20gy-gencatlg0 aacquireb1 shelf copyxpolicy default  bxn16 2021-09-14 z-processor to USASH  a  2021286569  a9781617295409  a161729540X  a(OCoLC)on1162729505  aTOHbengcTOHdBDXdYDXdTOHdOCLCOdJRZdOCLCFdDLC  alccopycat04a005.1332231 aBragilevsky, Vitaly,eauthor10aHaskell in depth /cVitaly Bragilevsky ; foreword by Simon Peyton Jones. 1aShelter Island, NY :bManning Publications Co.,c[2021] 4cÂ©2021  axxxiii, 627 pages :billustrations ;c24 cm  atextbtxt2rdacontent  aunmediatedbn2rdamedia  avolumebnc2rdacarrier  aIncludes index.0 aPart 1. Core Haskell -- Part 2. Introduction to application design -- Part 3. Quality assurance -- Part 4. Advanced Haskell -- Part 5. Haskell toolkit.  aSoftware for high-precision tasks like financial transactions, defense systems, and scientific research must be absolutely, provably correct.  As a purely functional programming language, Haskell enforces a mathematically rigorous approach that can lead to concise, efficient, and bug-free code.  To write such code you'll need deep understanding.  You can get it from this book!  Haskell in depth unlocks a new level of skill with this challenging language.  Goging beyond the basics of syntax and structure, this book opens up critical topics like advanced types, concurrency, and data processing.  You'll discover key parts of the Haskell ecosystem and master core design patterns that will transform how you write software. 0aHaskell (Computer program language) 0aFunctional programming (Computer science) 7aFunctional programming (Computer science)2fast0(OCoLC)fst00936086 7aHaskell (Computer program language)2fast0(OCoLC)fst009518301 aJones, Simon Peyton,ewriter of foreword04260cam a22004935i 45000010009000000050017000090060019000260070015000450080041000609060045001019250041001460350032001870100017002190200018002360240035002540400027002890720023003160720016003390720015003550820014003700970013003841000029003972450086004262500018005122640075005303000084006053360026006893370026007153380036007413470024007775050520008015201897013215880055032186500026032736500102032997760114034017760036035157760036035517760036035879520049036239520044036729850016037169910034037322167739720200928163557.0m    |o  d |      cr |||||||||||180517s2018    gw |||| o    |||| 0|eng    a0bibccorigresduencipf20gy-gencatlg0 aacquireepcnspringerxpolicy default  a(DE-He213)978-3-319-90800-7  a  2019745292  a97833199080077 a10.1007/978-3-319-90800-72doi  aDLCbengepnerdacDLC 7aCOM0512302bisacsh 7aUMZ2bicssc 7aUMZ2thema04a005.122300aQA76.7581 aLaÌmmel, Ralf.eauthor.10aSoftware Languages :bSyntax, Semantics, and Metaprogramming /cby Ralf LaÌmmel.  a1st ed. 2018. 1aCham :bSpringer International Publishing :bImprint: Springer,c2018.  a1 online resource (XXX, 424 pages 49 illustrations, 32 illustrations in color.)  atextbtxt2rdacontent  acomputerbc2rdamedia  aonline resourcebcr2rdacarrier  atext filebPDF2rda0 a1 The Notion of a Software Language -- 2 A Story of a Domain-Specific Language -- 3 Foundations of Tree- and Graph-Based Abstract Syntax -- 4 Representation of Object Programs in Metaprograms -- 5 A Suite of Metaprogramming Scenarios -- 6 Foundations of Textual Concrete Syntax -- 7 Implementation of Textual Concrete Syntax -- 8 A Primer on Operational Semantics -- 9 A Primer on Type Systems -- 10 An Excursion into the Lambda Calculus -- 11 An Ode to Compositionality -- 12 A Suite of Metaprogramming Techniques.  aThis book identifies, defines and illustrates the fundamental concepts and engineering techniques relevant to applications of software languages in software development. It presents software languages primarily from a software engineering perspective, id est, it addresses how to parse, analyze, transform, generate, format, and otherwise process software artifacts in different software languages, as they appear in software development. To this end, it covers a wide range of software languages - most notably programming languages, domain-specific languages, modeling languages, exchange formats, and specifically also language definition languages. Further, different languages are leveraged to illustrate software language engineering concepts and techniques. The functional programming language Haskell dominates the book, while the mainstream programming languages Python and Java are additionally used for illustration. By doing this, the book collects and organizes scattered knowledge from software language engineering, focusing on application areas such as software analysis (software reverse engineering), software transformation (software re-engineering), software composition (modularity), and domain-specific languages. It is designed as a textbook for independent study as well as for bachelor's (advanced level) or master's university courses in Computer Science. An additional website provides complementary material, for example, lecture slides and videos. This book is a valuable resource for anyone wanting to understand the fundamental concepts and important engineering principles underlying software languages, allowing them to acquire much of the operational intelligence needed for dealing with software languages in software development practice. This is an important skill set for software engineers, as languages are increasingly permeating software development.  aDescription based on publisher-supplied MARC data. 0aSoftware engineering.14aSoftware Engineering.0https://scigraph.springernature.com/ontologies/product-market-codes/I1402908iPrint version:tSoftware languages : syntax, semantics, and metaprogrammingz9783319907987w(DLC)  201894222808iPrinted edition:z978303008104108iPrinted edition:z978331990798708iPrinted edition:z9783319907994  aComputer Science (R0) (SpringerNature-43710)  aComputer Science (SpringerNature-11645)  aspringerpcn  as-OnlinehElectronic Resource03936cam a22003734a 45000010009000000050017000090080041000269060045000679250042001129250064001549550175002189550149003930100017005420150019005590160018005780200029005960200026006250350024006510400057006750420008007320500023007400820016007631000026007792450059008052600064008643000033009285040051009615050973010125200979019855200432029646500046033966500025034429630095034671626115920190426104012.0100601s2010    enka     b    001 0 eng    a7bcbccorignewd1eecipf20gy-gencatlg0 aacquireb1 shelf copyxpolicy default1 aacquireb2 shelf copiesxpolicy defaulteclaim1  2011-01-19  bxj12 2010-06-01cxj12 2010-06-01 ONIX (telework) to STMdxh09 2010-06-15 to Deweywrd14 2010-06-22axe10 2011-04-13 2 copies rec'd., to CIP ver.fxj04 2011-05-04 Z-CipVer  bxj12 2010-06-01cxj12 2010-06-01 ONIX (telework) to STMdxh09 2010-06-15 to Deweywrd14 2010-06-22axe10 2011-04-13 2 copies rec'd., to CIP ver.  a  2010022871  aGBB0672822bnb7 a0155663662Uk  a9780521513388 (hardback)  a0521513383 (hardback)  a(OCoLC)ocn643322214  aDLCcDLCdYDXdYDXCPdCDXdIULdUKMdBTCTAdCUDdDLC  apcc00aQA76.62b.B57 201000a006.3/12221 aBird, Richard,d1943-10aPearls of functional algorithm design /cRichard Bird.  aCambridge ;aNew York :bCambridge University Press,c2010.  axi, 277 p. :bill. ;c26 cm.  aIncludes bibliographical references and index.0 a1. The smallest free number -- 2. A surpassing problem -- 3. Improving on saddleback search -- 4. A selection problem -- 5. Sorting pairwise sums -- 6. Making a century -- 7. Building a tree with minimum height -- 8. Unravelling greedy algorithms -- 9. Finding celebrities -- 10. Removing duplicates -- 11. Not the maximum segment sum -- 12. Ranking suffixes -- 13. The Burrows-Wheeler transform -- 14. The last tail -- 15. All the common prefixes -- 16. The Boyer-Moore algorithm -- 17. The Knuth-Morris-Pratt algorithm -- 18. Planning solves the rush hour problem -- 19. A simple Sudoku solver -- 20. The countdown problem -- 21. Hylomorphisms and nexuses -- 22. Three ways of computing determinants -- 23. Inside the convex hull -- 24. Rational arithmetic coding -- 25. Integer arithmetic coding -- 26. The Schorr-Waite algorithm -- 27. Orderly insertion -- 28. Loopless functional algorithms -- 29. The Johnson-Trotter algorithm -- 30. Spider spinning for dummies.  a"Richard Bird takes a radically new approach to algorithm design, namely, design by calculation. These 30 short chapters each deal with a particular programming problem drawn from sources as diverse as games and puzzles, intriguing combinatorial tasks, and more familiar areas such as data compression and string matching. Each pearl starts with the statement of the problem expressed using the functional programming language Haskell, a powerful yet succinct language for capturing algorithmic ideas clearly and simply. The novel aspect of the book is that each solution is calculated from an initial formulation of the problem in Haskell by appealing to the laws of functional programming. Pearls of Functional Algorithm Design will appeal to the aspiring functional programmer, students and teachers interested in the principles of algorithm design, and anyone seeking to master the techniques of reasoning about programs in an equational style"--cProvided by publisher.  a"The novel aspect of the book is that each solution is calculated from the problem statement by appealing to the laws of functional programming. Pearls of Functional Algorithm Design will appeal to the aspiring functional programmer, students and teachers interested in the principles of algorithm design, and anyone seeking to master the techniques of reasoning about programs in an equational style"--cProvided by publisher. 0aFunctional programming (Computer science) 0aComputer algorithms.  aEmma Walker; phone: +44-1223 347956; email: ewalker@cambridge.org; bc: sreid@cambridge.org03368cam a22004337a 45000010009000000050017000090080041000269060045000679250042001129550057001540100017002110160018002280200015002460200018002610350024002790400084003030420014003870500026004010820010004271000029004372450077004662600031005433000031005743360026006053370028006313380027006594900038006865000020007245201586007446500040023306500046023706500072024166500066024886500056025548300035026108560106026458560091027518560092028421835251220150821110722.0141029s2014    caua   e      001 0 eng d  a7bcbcccopycatd2encipf20gy-gencatlg0 aacquireb1 shelf copyxpolicy default  brk12 2014-10-29 z-processorirk06 2014-11-03 to BCCD  a  20144665767 a0166282342Uk  a1430262508  a9781430262503  a(OCoLC)ocn862346456  aYDXCPbengcYDXCPdBTCTAdUKMGBdCDXdGZFdOCLCOdTXIdOCLCQdNLGGCdOCLCFdDLC  alccopycat00aQA76.73.H37bM46 201404a005.11 aMena, Alejandro Serrano.10aBeginning Haskell :ba project-based approach /cAlejandro Serrano Mena.  aBerkeley :bApress,c2014.  axxiii, 402 pages ;c24 cm.  atextbtxt2rdacontent  aunmediatedbn2rdamedia  avolumebnc2rdacarrier1 aThe expert's voice in programming  aIncludes index.  aBeginning Haskell provides a broad-based introduction to the Haskell language, its libraries and environment, and to the functional programming paradigm that is fast growing in importance in the software industry. The book takes a project-based approach to learning the language that is unified around the building of a web-based storefront. Excellent coverage is given to the Haskell ecosystem and supporting tools. These include the Cabal build tool for managing projects and modules, the HUnit and QuickCheck tools for software testing, the Scotty framework for developing web applications, Persistent and Esqueleto for database access, and also parallel and distributed programming libraries. Functional programming is gathering momentum, allowing programmers to express themselves in a more concise way, reducing boilerplate and increasing the safety of code. Indeed, mainstream languages such as Câ¯ and Java are adopting features from functional programming, and from languages implementing that paradigm. Haskell is an elegant and noise-free pure functional language with a long history, having a huge number of library contributors and an active community. This makes Haskell the best tool for both learning and applying functional programming, and Beginning Haskell the perfect book to show off the language and what it can do. Takes you through a series of projects showing the different parts of the language. Provides an overview of the most important libraries and tools in the Haskell ecosystem. Teaches you how to apply functional patterns in real-world scenarios. 0aHaskell (Computer program language) 0aFunctional programming (Computer science) 7aFunctional programming (Computer science)2fast0(OCoLC)fst00936086 7aHaskell (Computer program language)2fast0(OCoLC)fst0095183017aHaskell (programmeertaal)2gtt0(NL-LeOCL)194972054 0aExpert's voice in programming.423Contributor biographical informationuhttp://www.loc.gov/catdir/enhancements/fy1513/2014466576-b.html423Publisher descriptionuhttp://www.loc.gov/catdir/enhancements/fy1513/2014466576-d.html413Table of contents onlyuhttp://www.loc.gov/catdir/enhancements/fy1513/2014466576-t.html01659cgm a22003617a 45000010009000000050017000090070024000260080041000509060045000910100017001360400029001530500029001822450076002112570019002872600057003063000086003635000023004495080057004725110021005295110043005505110023005935200112006165000078007285000152008065410070009586550047010286550043010756550034011186550032011527000023011847000036012077100054012431237689520130920092924.0mr ||||||||||||||200104010411s1955    xxu009            mleng    a7bcbccorignewduencipf20gy-movingim  a  2001638610  aDLCcDLCdDLCeamimdDLC00aFAA 2651 (viewing print)05a[The Jack Paar show.n1955-09-30--excerpts] /cCBS Television presents.  aUnited States.  aUnited States:bCBS Television Network,c1955-09-30.  3viewing print.a1 film reel of ? (r1?) (ca. 9 min., 300 ft.):bsd., b&w ;c16 mm.  aCopyright: no reg.  aAnnouncer, Hal Simms ; musical director, Jose Melis.0 aHost: Jack Paar.0 aPerformers: Edith Adams, Jack Haskell.0 aGuests: Burl Ives.  aBurl Ives sings a type of ballad for which he is well known. He and Jack Paar discuss his love of sardines.  aPart of summary from TV guide (New York Metropolitan edition), 9/30/1955.  aSources used: Total television, a comprehensive guide to programming from 1948 to present, 3rd ed., p. 384; TV guide (New York edition), 9/30/1955.  3viewing print;dReceived: 1/1968;cgift;aIves (Burl) Collection. 7aVariety shows (Television programs)2lcgft 7aNonfiction television programs.2lcgft 7aTelevision talk shows.2lcgft 7aTelevision comedies.2lcgft1 aPaar, Jack,ehost.1 aIves, Burl,d1909-1995,eguest.2 aIves (Burl) Collection (Library of Congress)5DLC01286cam a22003014a 45000010009000000050017000090080041000269060045000679250044001129550154001560100017003100200026003270200022003530400018003750420008003930500023004010820017004241000017004412450106004582600051005643000034006155040064006496500040007136500046007536500024007998560074008238560087008971177053720180406081420.0990817s2000    nyua     b    001 0 eng    a7bcbccorignewd1eocipf19gy-gencatlg0 aacquireb2 shelf copiesxpolicy default  ato ASCD pc05 08-17-99; jf07 08-20-99; jf11 to sl 08-23-99 ;jf12 ; to Dewey 08-27-99; aa11 08-27-99; CIP ver. jg02 May 03, 2000; ja15 to BCCD 07-06-00  a   99045529   a0521643384 (hardback)  a0521644089 (pbk.)  aDLCcDLCdDLC  apcc00aQA76.62b.H83 200000a005.1/142211 aHudak, Paul.14aThe Haskell school of expression :blearning functional programming through multimedia /cPaul Hudak.  aNew York :bCambridge University Press,c2000.  axviii, 363 p. :bill.c24 cm.  aIncludes bibliographical references (p. 353-355) and index. 0aHaskell (Computer program language) 0aFunctional programming (Computer science) 0aMultimedia systems.413Table of contentsuhttp://www.loc.gov/catdir/toc/cam023/99045529.html423Publisher descriptionuhttp://www.loc.gov/catdir/description/cam0210/99045529.html01773ngm a22003977a 45000010009000000050017000090070010000260080041000360350021000779060045000980100017001430170035001600400024001950500030002192450117002492460010003662570009003762600042003853000066004275000059004935080126005525110093006785000149007715410096009206550019010166550021010356550017010567000033010737000029011067000026011357000040011617000037012017100075012389530009013139910053013221169776600000000000000.0mrucaaadu970610s1964    xxu050            mleng    9(DLC)   97510138  a0bibccorignewduencipf19gy-movingim  a   97510138   aLP31140bU.S. Copyright Office  aDLCcDLCdamimdDLC00aFCB 4354-4355 (ref print)00aBonanza.pThe roper /cNational Broadcasting Company, Ltd. ; producer, David Dortort ; written by, Peter Packer.30aRoper  aU.S.  aUnited States :bNBC-TV,c1964-04-05.  a2 reels of 2 (ca. 1800 ft.) :bsd., col. ;c16 mm. ref print.  aNational Broadcasting Company, Ltd.; 21Feb64; LP31140.  aAssociate producer, James W. Lane ; edited by Marvin Coil ; music by David Rose ; director of photography, Haskell Boggs.1 aLorne Greene, Michael Landon, Dan Blocker, Scott Marlowe, Guy Williams, Pernell Roberts.  aSources used: Catalog of copyright entries, motion pictures, 1960-1969, p. 63; Gianakos, Television drama series programming, 1959-1975, p. 218.  dReceived: 2/2/82;3ref print;cgift, ATM 133;aAFI/Triangle Laboratories Estate Collection. 7aWesterns.2mim 7aTelevision.2mim 7aSeries.2mim1 aDortort, David,eproduction.1 aPacker, Peter,ewriting.1 aGreene, Lorne,ecast.1 aLandon, Michael,d1936-1991,ecast.1 aBlocker, Dan,d1928-1972,ecast.2 aAFI/Triangle Laboratories Estate Collection (Library of Congress)5DLC  aTE01  bc-MP&TVhFCB 4354-4355 (ref print)wMUMS VM File00860cam a2200265 a 4500001000800000005001700008008004100025035002100066906004500087010001700132020003200149020002200181040001800203050002600221082001700247100002400264245003600288260005100324300003500375500002300410500002000433650003800453650003800491991006500529469561319850807000000.0820125s1982    njua          001 0 eng    9(DLC)   82000362  a7bcbccorignewd1eocipf19gy-gencatlg  a   82000362   a0130390992 (pbk.) :c$12.95  a0130391077 (hard)  aDLCcDLCdDLC00aQA76.8.A662bH28 198200a001.64/22191 aHaskell, Richard E.10aApple basic /cRichard Haskell.  aEnglewood Cliffs, NJ :bPrentice-Hall,cc1982.  aviii, 183 p. :bill. ;c28 cm.  a"A Spectrum book."  aIncludes index. 0aApple II (Computer)xProgramming. 0aBASIC (Computer program language)  bc-GenCollhQA76.8.A662iH28 1982p00034922196tCopy 1wBOOKS01004cam a2200289 a 4500001000800000005001700008008004100025035002100066906004500087010001700132020002200149040001800171050002500189082001800214100002400232245007600256260005300332300003300385500002300418500002000441650004200461650003600503650003800539700002700577740004600604991006400650424231819850812000000.0830916s1983    njua          001 0 eng    9(DLC)   83021093  a7bcbccorignewd1eocipf19gy-gencatlg  a   83021093   a0131522817 (pbk.)  aDLCcDLCdDLC00aQA76.8.C64bH37 198300a001.64/242191 aHaskell, Richard E.10aCommodore 64/VIC 20 BASIC /cby Richard Haskell and Thomas Windeknecht.  aEnglewood Cliffs, N.J. :bPrentice-Hall,cc1983.  avi, 183 p. :bill. ;c28 cm.  a"A Spectrum book."  aIncludes index. 0aCommodore 64 (Computer)xProgramming. 0aVIC 20 (Computer)xProgramming. 0aBASIC (Computer program language)1 aWindeknecht, Thomas G.0 aCommodore sixty four/V.I.C. twenty BASIC.  bc-GenCollhQA76.8.C64iH37 1983p00034785582tCopy 1wBOOKS01319cam a2200313 a 4500001000800000005001700008008004100025906004500066010001700111035002100128040002300149050002800172082001600200100002400216245007000240260010000310300006600410500010600476500002000582500006200602650004000664650004600704650004600750952003900796984002000835985002700855987005600882991006700938384397420181025113723.0870128s1986    miua          001 0 eng    a7bcbccorignewd2encipf19gy-gencatlg  a   87107210   9(DLC)   87107210  aDLCbengcDLCdDLC00aQA76.8.I2594bH377 198600a005.2652191 aHaskell, Richard E.10aIBM PC--8088 assembly language programming /cRichard E. Haskell.  aRochester Hills, Mich. (54 N. Adams, Suite 130-B, Rochester Hills 48063) :bREHI Books,cc1986.  aviii, 293 p. :bill. ;c28 cm. +e1 computer disk (5 1/4 in.)  aSystem requirements for disk: IBM PC or IBM compatible; PC DOS; monochrome or color monitor; printer.  aIncludes index.  aCard indicates transferred to MRCRR from Spec Format5DLC 0aIBM Personal ComputerxProgramming. 0aIntel 8088 (Microprocessor)xProgramming. 0aAssembly languages (Electronic computers)  aLAC scc 2018-10-25 update (1 card)  arsld2018-10-25  arblacfederald20181025  bRBSCDRECONc20181025drfBIB FILE MAINT.; SPEC MAT.  bc-SpecMathQA76.8.I2594iH377 1986tCopy 1mSpec FormatwBOOKS00963cam a2200289 a 4500001000800000005001700008008004100025035002100066906004500087010001700132020001500149020002200164040001800186050002700204082001800231100002400249245007000273260005300343300003500396500002300431500002000454650004000474650003800514700002200552740003300574991006600607376923119850812000000.0830909s1984    njua          001 0 eng    9(DLC)   83019220  a7bcbccorignewd1eocipf19gy-gencatlg  a   83019220   a0134484320  a013448424X (pbk.)  aDLCcDLCdDLC00aQA76.8.I2594bH38 198400a001.64/242191 aHaskell, Richard E.10aIBM PC BASIC programming /cRichard Haskell and Glenn A. Jackson.  aEnglewood Cliffs, N.J. :bPrentice-Hall,cc1984.  aviii, 183 p. :bill. ;c29 cm.  a"A Spectrum book."  aIncludes index. 0aIBM Personal ComputerxProgramming. 0aBASIC (Computer program language)1 aJackson, Glenn A.0 aI.B.M. PC BASIC programming.  bc-GenCollhQA76.8.I2594iH38 1984p00054039426tCopy 1wBOOKS00851cam a2200265 a 4500001000800000005001700008008004100025035002100066906004500087010001700132020002500149020003200174040001800206050002500224082001800249100002400267245003600291260005100327300002900378500002300407500002000430650003300450650003800483991006400521375207919850808000000.0830103s1983    njua          001 0 eng    9(DLC)   82025070  a7bcbccorignewd1eocipf19gy-gencatlg  a   82025070   a0130498092 :c$19.95  a0130497916 (pbk.) :c$13.95  aDLCcDLCdDLC00aQA76.8.A82bH37 198300a001.64/242191 aHaskell, Richard E.10aATARI BASIC /cRichard Haskell.  aEnglewood Cliffs, NJ :bPrentice Hall,cc1983.  a175 p. :bill. ;c29 cm.  a"A Spectrum book."  aIncludes index. 0aAtari computerxProgramming. 0aBASIC (Computer program language)  bc-GenCollhQA76.8.A82iH37 1983p00034788285tCopy 1wBOOKS00880cam a2200277 a 4500001000800000005001700008008004100025035002100066906004500087010001700132020002200149020002200171040001800193050002000211082001700231100002400248245003800272260005300310300003300363500002300396500002000419650003300439650003300472650003800505991005900543326084219850807000000.0810817s1982    njua          001 0 eng    9(DLC)   81013896  a7bcbccorignewd1eocipf19gy-gencatlg  a   81013896   a0136617697 (case)  a0136617514 (pbk.)  aDLCcDLCdDLC00aQA76.8.P47bH3700a001.64/22191 aHaskell, Richard E.10aPET/CBM BASIC /cRichard Haskell.  aEnglewood Cliffs, N.J. :bPrentice-Hall,cc1982.  avi, 154 p. :bill. ;c28 cm.  a"A Spectrum book."  aIncludes index. 0aPET (Computer)xProgramming. 0aCBM (Computer)xProgramming. 0aBASIC (Computer program language)  bc-GenCollhQA76.8.P47iH37p00034968093tCopy 1wBOOKS00784pam a2200241 i 4500001000800000005001700008008004100025035002100066906004500087010001700132020001500149040001800164050002100182082001400203100002400217245007500241260005200316300002600368500002000394650004000414650002800454991006000482224860119780615000000.0770701s1978    ilu           001 0 eng    9(DLC)   77023931  a7bcbccorignewd1eocipf19gy-gencatlg  a   77023931   a0574211357  aDLCcDLCdDLC00aQA76.73.F25bH3800a001.6/4241 aHaskell, Richard E.10aFORTRAN programming using structured flowcharts /cRichard E. Haskell.  aChicago :bScience Research Associates,cc1978.  axii, 280 p. ;c24 cm.  aIncludes index. 0aFORTRAN (Computer program language) 0aStructured programming.  bc-GenCollhQA76.73.F25iH38p00034769990tCopy 1wBOOKS01274cam a22003014a 4500001000800000005001700008008004100025906004500066925004400111955018300155955005300338010001700391020001500408035002100423040001800444042000800462050002300470082001600493245008800509260004800597300003300645504006300678650004600741650004000787700002800827700002800855856008900883206910020070924143032.0940809s1995    enka     b    001 0 eng    a7bcbccorignewd1eocipf19gy-gencatlg0 aacquireb2 shelf copiesxpolicy default  apc03 to ja00 08-10-94; jf09 to subj 08-09-94; jf04 to S.L. 08-10-94; jf12 08-10-94 to ddc; bk rec'd, to CIP ver. ps07  11-02-99;CIP ver jf05 to sl 01/12/00; jf12 to BCCD 01-31-00  aADDED COPIES: another copy to ASCD ps15 11-10-99  a   94023269   a1857283775  9(DLC)   94023269  aDLCcDLCdDLC  apcc00aQA76.62b.A67 199500a005.1/122000aApplications of functional programming /cedited by Colin Runciman, David Wakeling.  aLondon ;aBristol, Pa. :bUCL Press,c1995.  axv, 240 p. :bill. ;c24 cm.  aIncludes bibliographical references (p. 227-35) and index. 0aFunctional programming (Computer science) 0aHaskell (Computer program language)1 aRunciman, Colin,d1955-1 aWakeling, David,d1965-423Publisher descriptionuhttp://www.loc.gov/catdir/enhancements/fy0745/94023269-d.html01456cam a2200373 a 4500001000800000005001700008008004100025906004500066010001700111020002200128035002100150040002300171050002700194082001700221100002400238245006200262260005200324300005200376500002300428500003700451500006900488500002000557500008700577650003800664650004000702650004600742740004200788740004400830952003900874984002000913985002700933987005600960991006601016186124420181024154524.0821019s1983    njua          001 0 eng    a7bcbccorignewd1eocipf19gy-gencatlg  a   82021459   a0130392308 (pbk.)  9(DLC)   82021459  aDLCbengcDLCdDLC00aQA76.8.A662bH275 198300a001.64/22191 aHaskell, Richard E.10aApple II-6502 assembly language tutor /cRichard Haskell.  aEnglewood Cliffs, N.J. :bPrentice-Hall,c1983.  avi, 234 p. :bill. ;c24 cm. +e1 program file.  a"A Spectrum book."  aProgram file on disk (5 1/4 in.)  aMode of use: Apple II or Apple II plus; 48K RAM; DOS 3.2 or 3.3.  aIncludes index.  aCard indicates copies 1 and 2 transferred from Spec Format  to MRCRR 4/29/88.5DLC 0aApple II (Computer)xProgramming. 0a6502 (Microprocessor)xProgramming. 0aAssembly languages (Electronic computers)0 aApple 2-6502 assembly language tutor.0 aApple two-6502 assembly language tutor.  aLAC scc 2018-10-24 update (1 card)  arsld2018-10-24  arblacfederald20181024  bRBSCDRECONc20181024drfBIB FILE MAINT.; SPEC MAT.  bc-SpecMathQA76.8.A662iH275 1983tCopy 1mSpec FormatwBOOKS01007cam a2200265 a 4500001000800000005001700008008004100025035002100066906004500087955012200132010001700254020001500271040001800286050002300304082001700327100002100344245007000365250001200435260006100447300003300508504005100541650004600592920004100638991006200679167321419990623105323.7981110s1999    enka     b    001 0 eng    9(DLC)   98051704  a7bcbccorignewd1eocipf19gy-gencatlg  apc20 to ja00 11-10-98; jf03 to Subj. 11-10-98; jf11 to sl 11-12-98;jf12 11-12-98 to ddc; CIP ver. jf03 to SL 04-14-99  a   98051704   a0201342758  aDLCcDLCdDLC00aQA76.62b.T43 199900a005.13/32211 aThompson, Simon.10aHaskell :bthe craft of functional programming /cSimon Thompson.  a2nd ed.  aHarlow, Eng. ;aReading, Mass. :bAddison Wesley,c1999.  axx, 487 p. :bill. ;c24 cm.  aIncludes bibliographical references and index. 0aFunctional programming (Computer science)  a** LC HAS REQ'D # OF SHELF COPIES **  bc-GenCollhQA76.62i.T43 1999p00055630215tCopy 1wBOOKS01430cam a2200301 a 4500001000800000005001700008008004100025906004500066955015400111010001700265020001500282035002100297040001800318050002500336082001600361100002400377245008200401260006100483300006600544500014500610500006800755504006000823650004600883650004000929650004300969700006901012991004701081108784820121213075542.0920611s1993    njua     b    001 0 eng    a7bcbucorignewd1eocipf19gy-gencatlg  apc14 to ja00 06-16-92; jf06 06-16-92; jf10 06-26-92; jf11 06-29-92; jf13 06-30-92; aa00 07-01-92; CIP ver jf06 to CF/Spec Mat 01-07-93; vb12 02-09-93  a   92022015   a0134543491  9(DLC)   92022015  aDLCcDLCdDLC00aQA76.73.A8bH37 199300a005.2652201 aHaskell, Richard E.10aAssembly language tutor for the IBM PC and compatibles /cRichard E. Haskell.  aEnglewood Cliffs, N.J. :bRegents/Prentice Hall,cc1993.  axiii, 464 p. :bill. ;c28 cm. +e1 computer disk (5 1/4 in.)  aSystem requirements for computer disk: IBM PC or compatible with 8088, 8086, 286, 386, or 486 microprocessor; 256K RAM; MS-DOS 2.0 or later.  aRev. ed. of: IBM PC--8088 assembly language programming. c1986.  aIncludes bibliographical references (p. 347) and index. 0aAssembly languages (Electronic computers) 0aIBM Personal ComputerxProgramming. 0aIBM compatible computersxProgramming.1 aHaskell, Richard E.tIBM PC--8088 assembly language programming.  bc-MRChQA76.73.A8iH37 1993tCopy 1wBOOKS